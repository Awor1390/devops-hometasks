pipeline {
  agent any
  options {
      timestamps()
  }
  environment {
      NEXUS_IP="192.168.59.90"
      STAGING_IP="192.168.59.80"
      PRODACT_IP="192.168.59.85"
      GIT="https://github.com/Awor1390/word-cloud-generator"
      SSH_PASSWORD="vagrant"
      SSH_USER="vagrant"
      SSH_CRED_STAGE="sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$STAGING_IP"
      SSH_CRED_PRODT="sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$PRODACT_IP"
  }
  stages{
    stage ('Get git repo'){
        steps{
            cleanWs()
            git(
                branch: 'master',
                changelog: false,
                poll: false,
                url: "$GIT"
            )
        }
    }
    stage ('Source checks and tests'){
        tools {
            go 'Go_1.16'
        }
        steps{
            script {
                    def lintExitCode = sh(script: 'make lint', returnStatus: true)
                    def testExitCode = sh(script: 'make test', returnStatus: true)
                    if ((lintExitCode != 0) || (testExitCode != 0)) {
                        echo "FAIL CODE\n\tLINT=${lintExitCode}\n\tTEST=${testExitCode}"
                    } else {
                        echo "LINT && TEST CHECKS OK"
                    }
            }
        }
    }
    stage ('Build code'){
        tools {
            go 'Go_1.16'
        }
        steps{
            sh '''
                echo "{ \\"version\\": \\"1.$BUILD_NUMBER\\" }" >static/version

                GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v .

                md5sum artifacts/word-cloud-generator
                gzip artifacts/word-cloud-generator

                ls -l artifacts/
            '''
        }
    }
    stage ('Nexus artifact upload'){
        steps {
            nexusArtifactUploader  (
                artifacts: [
                    [
                        artifactId: 'word-cloud-generator', 
                        classifier: '', 
                        file: 'artifacts/word-cloud-generator.gz', 
                        type: 'gz'
                    ]
                ], 
                credentialsId: 'nexus-creds', 
                groupId: '1', 
                nexusUrl: "$NEXUS_IP:8081/", 
                nexusVersion: 'nexus3', 
                protocol: 'http', 
                repository: 'word-cloud-app', 
                version: '$BUILD_NUMBER'
            )
        }
    }
    
    stage('Deploy to Staging') {
        steps {
            withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'NEXUS_DOWNLOAD_PASSWORD', usernameVariable: 'NEXUS_DOWNLOAD_USER')]) {
                sh '''
                    $SSH_CRED_STAGE "sudo mkdir -p /opt/wordcloud"
                    $SSH_CRED_STAGE "sudo chown -R vagrant:vagrant /opt/wordcloud"
                    $SSH_CRED_STAGE "sudo chmod -R 755 /opt/wordcloud"
                    $SSH_CRED_STAGE "chmod +x /opt/wordcloud/word-cloud-generator".gz

                    $SSH_CRED_STAGE  "curl -X GET -u $NEXUS_DOWNLOAD_USER:$NEXUS_DOWNLOAD_PASSWORD http://$NEXUS_IP:8081/repository/word-cloud-build/1/word-cloud-generator/${BUILD_NUMBER}/word-cloud-generator-${BUILD_NUMBER}.gz -o /opt/wordcloud/word-cloud-generator.gz"
                    $SSH_CRED_STAGE  "gunzip -f /opt/wordcloud/word-cloud-generator.gz"
                    $SSH_CRED_STAGE  "chmod +x /opt/wordcloud/word-cloud-generator"

                    $SSH_CRED_STAGE  "sudo systemctl stop wordcloud"
                    $SSH_CRED_STAGE  "sudo systemctl start wordcloud"
                '''
            }
        }
    }
}
}
